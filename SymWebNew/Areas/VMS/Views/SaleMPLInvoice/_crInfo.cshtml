@model VATViewModel.DTOs.SalesInvoiceMPLCRInfoVM
@using UIHelper.MVC
@{
    Layout = "~/Areas/VMS/Views/Shared/_ModalLayout.cshtml";
}
<style>
    .trkMT10 {
        margin-top: 10px;
    }
</style>
<div class="HigherModal-content">
    <div class="HigherModal-header">
        <span class="closeHigher">&times;</span>
        <h2 class="text-center">CR Info Search</h2>
    </div>
    <div class="HigherModal-body formDesign">
        <div class="row">
            <div class="col-md-2">
                <label>Search Field</label>
                @Html.SimpleDropDown("SearchField", "/Config/DropDown/CRInfoColumnSearch", new { @class = " form-control " })
            </div>
            <div class="col-md-2">
                <label>Search Value</label>
                @Html.TextBox("SearchValue", "", new { @class = " form-control" })
            </div>
            @Html.HiddenFor(m => m.CustomerId, new { @class = "cCustomerId" })
            @Html.HiddenFor(m => m.SalesInvoiceMPLHeaderId, new { @class = "cSalesInvoiceMPLHeaderId" })
            <div class="trk1_5">
                <label for="startPopUpDate">CR Date From</label>
                <div class="editor-field">
                    @Html.TextBox("startPopUpDate", null, new { @placeholder = "Date From", @class = "dtFrom customDatePicker form-control" })
                </div>
            </div>
            <div class="trk1_5">
                <label for="endPopUpDate">CR Date To</label>
                <div class="editor-field">
                    @Html.TextBox("endPopUpDate", null, new { @placeholder = "Date To", @class = "dtTo customDatePicker form-control" })
                </div>
            </div>
            <div class="col-md-1 ">
                <label>Is Used</label>
                <select id="activePopUp" class="form-control">
                    <option value="N">N</option>
                    <option value="Y">Y</option>
                </select>
            </div>
            <div class="trk_5">
                <div class="editor-field">
                    <label>&nbsp;</label>
                    <button type="button" title="Click to Search" id="searchBtn" class="sym-btn-search btnPopUpSearch">&nbsp;</button>
                </div>
            </div>
            <div class="trk_5">
                <label>&nbsp;</label>
                <button type="button" title="Clear Data" id="Clear" class=" sym-btn-clear">&nbsp;Clear</button>
            </div>
        </div>
        <div class="row">
            <div class="fixedParent">
                <table class="trkFixTable" id="customerPopUpTable">
                    <thead>
                        <tr>
                            <th>SL</th>
                            <th>Invoice No</th>
                            <th>Customer Name</th>
                            <th>Customer Code</th>
                            <th>CR Code</th>
                            <th>CR Date</th>
                            <th>Amount</th>
                            <th>Is Used</th>
                        </tr>
                    </thead>
                    <tbody id="popUpTbody1"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*fixed table*@
<script language="javascript" type="text/javascript">
    function fixedScrollPopUpFixedTable(tableId, leftTotal) {
        $('#' + tableId + ' tbody').scroll(function (e) {
            var i;
            for (i = 1; i <= leftTotal; i++) {
                $('#' + tableId + ' thead th:nth-child(' + i + ')').css("left", $("#" + tableId + " tbody").scrollLeft());
                $('#' + tableId + ' tbody td:nth-child(' + i + ')').css("z-index", "1");
                $('#' + tableId + ' tbody td:nth-child(' + i + ')').css("left", $("#" + tableId + " tbody").scrollLeft());
            }
            $('#' + tableId + ' thead').css("left", -$("#" + tableId + " tbody").scrollLeft());

        });
    }
    function settingPopUpFixedColumnWidth(tableId, widthArgs) {
        if (widthArgs == null) {
            return;
        }
        var i;
        for (i = 1; i <= widthArgs.length; i++) {
            $('#' + tableId + ' tr td:nth-child(' + i + ')').css("min-width", widthArgs[i - 1] + "px");
            $('#' + tableId + ' tr td:nth-child(' + i + ')').css("overflow", "hidden");
            $('#' + tableId + ' tr td:nth-child(' + i + ')').css("max-width", widthArgs[i - 1] + "px");

            $('#' + tableId + ' tr th:nth-child(' + i + ')').css("min-width", widthArgs[i - 1] + "px");
            $('#' + tableId + ' tr th:nth-child(' + i + ')').css("overflow", "hidden");
            $('#' + tableId + ' tr th:nth-child(' + i + ')').css("max-width", widthArgs[i - 1] + "px");
        }
    }
    function fixLeftPopUpColumns(tableId, leftTotal) {
        var i;
        for (i = 1; i <= leftTotal; i++) {
            //fixed column header style
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("height", "30px");
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("position", "relative");
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("z-index", "2");
            //fixed column rows style
            $('#' + tableId + ' tbody tr td:nth-child(' + i + ')').css("height", "30px");
            $('#' + tableId + ' tbody tr td:nth-child(' + i + ')').css("position", "relative");
        }
    }
    function settingFixedPopUpWidth(tableId) {
        //var parentWidth = $('.fixedParent').width();
        var parentWidth = $('#' + tableId).closest('.fixedParent').width();
        $('#' + tableId + ' thead').width(parentWidth);
        $('#' + tableId + ' tbody').width(parentWidth);
    }
    function trkFixedPopUpTable(tableId, leftTotal, args) {
        settingFixedPopUpWidth(tableId);
        fixLeftPopUpColumns(tableId, leftTotal);
        fixedScrollPopUpFixedTable(tableId, leftTotal);
        settingPopUpFixedColumnWidth(tableId, args);
    }
    function callingFixedPopUpTable() {
        var args = [50, 200, 200, 200, 100, 200, 200, 200, 200, 200, 200, 200, 200];
        trkFixedPopUpTable("customerPopUpTable", 3, args);
    }
    $(function () {
        callingFixedPopUpTable();
    })
</script>

<script>
    ////closing higher modal
    function closeHigherModal() {
        $("#myHigherModal").html("");
        trkmodal.style.display = "none";
    }
    var span = document.getElementsByClassName("closeHigher")[0];
    var trkmodal = document.getElementById('myHigherModal');
    //When the user clicks on <span> (x), close the trkmodal
    span.onclick = function () {
        closeHigherModal();
    }

    $(function () {
        $('#customerPopUpTable').unbind().on('dblclick', '.trSelectPopUpCustomer', function () {
            var SalesInvoiceNoTable = $(this).children('td.popUpSalesInvoiceNo').text();
            var SalesInvoiceNo = $('.trSalesInvoiceNo').val()
            var CRCode = $(this).children('td.popUpCRCode').text();
            var CRDate = $(this).children('td.popUpCRDate').text();
            var CRSalesInvoiceMPLHeaderId = $(this).children('td.popUpSalesInvoiceMPLHeaderId').text();

            var CRAmount = $(this).children('td.popUpCRAmount').text();
            var IsUsed = $(this).children('td.popUpIsUsed').text();
            if (IsUsed === "Y") {
                ShowResult("Fail", "This CR Already Used!");
                return;
            }
            if (SalesInvoiceNoTable === SalesInvoiceNo) {
                ShowResult("Fail", "You Can't Select Root CR");
                return;
            }
            selectPopUpProduct(CRCode, CRAmount, CRDate, CRSalesInvoiceMPLHeaderId);
        });
        function selectPopUpProduct(CRCode, CRAmount, CRDate, CRSalesInvoiceMPLHeaderId) {
            callbackFromCRModal(CRCode, CRAmount, CRDate, CRSalesInvoiceMPLHeaderId);
            closeHigherModal();
        }
        $(document).on('click', '.trSelectPopUpCustomer', function () {
            var activeEl = $('tr.active');
            activeEl.removeClass("active");
            $(this).addClass(" active");
        });
    })
</script>

<script>

    function ShowSelectedCustomer() {
       
        var interval = setInterval(function () {
            
                SearchCustomers();
                clearInterval(interval);
        }, 200);
    }

    function SearchCustomers() {
        ////debugger
        var SearchField = $('#SearchField').val();
        var SearchValue = $('#SearchValue').val();
        var CustomerId = $('.cCustomerId').val();
        var SalesInvoiceMPLHeaderId = $('.cSalesInvoiceMPLHeaderId').val();
        
        var StartDateFrom = $('#startPopUpDate').val();
        var StartDateTo = $('#endPopUpDate').val();
        var activePopUp = $('#activePopUp').val();
        var ActiveStatus;
        if (activePopUp == "Y") {
            ActiveStatus = true;
        }
        if (activePopUp == "N") {
            ActiveStatus = false;
        }

        var model = {
            SearchField: SearchField,
            SearchValue: SearchValue,
            CustomerId: CustomerId,
            SalesInvoiceMPLHeaderId: SalesInvoiceMPLHeaderId,
            CRDateFrom: StartDateFrom,
            CRDateTo: StartDateTo,
            IsUsed: ActiveStatus
        }
        $.ajax({
            data: model
            , url: "/Vms/SaleMPLInvoice/GetFilteredCRInfo"
            , cache: false
            , beforeSend: function () { $(".loading").show(); }
            , success: function (html) {
                $("#popUpTbody1").html("");
                $("#popUpTbody1").html(html);

                console.log(html);

                callingFixedPopUpTable();
            }
            , complete: function () { $(".loading").fadeOut(200).hide("slow") }
        });

    }
    $(function () {
        ShowSelectedCustomer();
        $('.btnPopUpSearch').click(function () {
            SearchCustomers();
        });
        $("#Clear").on('click', function () {
            $(".Dropdown").select2("val", "");
            $(".form-control").val("");
        });
    });
</script>

