@model VATViewModel.DTOs.VendorVM
@using UIHelper.MVC
@using (Html.BeginForm("CreateEdit", "Vendor", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmVendorMy" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.VendorID)
    @Html.HiddenFor(model => model.Operation)
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="pageSubmit('frmVendorMy')" class="sym-btn-save">&nbsp;Save</button>
            <label class="pull-right">Vendor > Create</label>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="pageSubmit('frmVendorMy')" class="sym-btn-update">&nbsp;Update</button>
            <label class="pull-right">Vendor > Edit</label>
        }
        <button type="button" title="Go To Index" data-url="/VMS/Vendor" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New Vendor" data-url="/VMS/Vendor/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
    if (Model.Operation == "update") {
    <div class="col-sm-12 col-md-12">
        <div class="input-group   col-lg-8  col-md-8  col-sm-8 col-xs-12 text-color col-md-offset-2" style="">
            <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='first' id="first"><i class="fa fa-angle-double-left"></i>First</a>
            <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='previous' id="precode"><i class="fa fa-angle-left"></i>Previous</a>
            @Html.SimpleDropDown("", "/Config/DropDown/IdNameDropdown?tableName=Vendors&Id=VendorID&Name=VendorName&AllData=no&code=VendorCode", new { @class = " trNavigateMenu form-control selectDropdown " })
            <a class="input-group-addon btn btn-primary changePage" data-pager-action='current' id="current"><i class="fa fa-search"></i></a>
            <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='next' id="nextcode">Next <i class="fa  fa-angle-right"></i></a>
            <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='last' id="last">Last <i class="fa  fa-angle-double-right"></i></a>
        </div>
    </div>
    }

    <div class="col-md-6 trkPL-0 trkPR-2 animated zoomIn faster">
        <div class="thinbox">
            <div class="th_thinbox">
                <p>Basic</p>
            </div>
            <div class="row">
                <div class="form-group">
                    <label for="VendorCode" class="col-md-4 control-label text-right trkLabelMargin">Vendor Code</label>
                    <div class="col-md-8">
                        <div class="input-group col-md-6" style="margin-bottom:6px;">
                            @Html.TextBoxFor(model => model.VendorCode, new { @placeholder = "Vendor Code", @class = " required form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.VendorCode)
                    </div>
                    <label for="VendorName" class="col-md-4 control-label text-right trkLabelMargin">Vendor Name</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.VendorName, new { @placeholder = "Vendor Name", @class = " required form-control" })
                        @Html.ValidationMessageFor(model => model.VendorName)
                    </div>

                </div>

                <div class="form-group">
                    <label for="VendorGroupID" class="col-md-4 control-label text-right trkLabelMargin">Group</label>
                    <div class="col-md-8">
                        <div class="input-group col-md-6" style="margin-bottom:6px;">
                            @Html.SimpleDropDownFor(model => model.VendorGroupID, "/Config/DropDown/VendorGroup", new { @class = "required form-control trkMT-0" })
                        </div>
                        @Html.ValidationMessageFor(model => model.VendorGroupID)
                    </div>
                    <label for="VendorGroupID" class="col-md-4 control-label text-right trkLabelMargin">Start DateTime</label>
                    <div class="col-md-8">
                        <div class="input-group col-md-6" style="margin-bottom:6px;">
                            @Html.TextBoxFor(model => model.StartDateTime, new { @class = " trDate customDatePicker  form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.StartDateTime)
                    </div>
                </div>

                <div class="form-group">
                    <label for="VendorGroupID" class="col-md-4 control-label text-right trkLabelMargin">NID/BIN /VAT Registration No.</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.VATRegistrationNo, new { @placeholder = "NID/BIN / VAT Registration No.", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.VATRegistrationNo)
                    </div>

                    @*<label for="VendorGroupID" class="col-md-4 control-label text-right trkLabelMargin">NID No.</label>
                    <div class="col-md-8"> 
                        @Html.TextBoxFor(model => model.NIDNo, new { @placeholder = "NID No.", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.NIDNo)
                    </div>*@


                    <label for="VendorGroupID" class="col-md-4 control-label text-right trkLabelMargin">TIN No</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.TINNo, new { @placeholder = "TIN No.", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.TINNo)
                    </div>

                    @*<label for="VDS" class="col-md-4 control-label text-right trkLabelMargin">VDS</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.VDSPercent, new { @placeholder = "VDS", @class = "cVDSPercent form-control" })
                        @Html.ValidationMessageFor(model => model.VDSPercent)
                    </div>*@

                </div>
            </div>
        </div>
        <div class="thinbox">
            <div class="th_thinbox">
                <p>Business</p>
            </div>
            <div class="row">
                <div class="form-group">
                    <label for="BusinessType" class="col-md-4 control-label text-right trkLabelMargin">Business Type</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.BusinessType, new { @placeholder = "Business Type", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.BusinessType)
                    </div>
                    <label for="BusinessCode" class="col-md-4 control-label text-right trkLabelMargin">Business Code</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.BusinessCode, new { @placeholder = "Business Code", @class = " form-control" })
                        @Html.ValidationMessageFor(model => model.BusinessCode)
                    </div>
                </div>

            </div>
            <div style="padding-bottom:20px"></div>

        </div>
    </div>

    <div class="col-md-6 trkPX-0 animated zoomIn faster">
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Detail</p>
        </div>
        <div class="row">
            <div class="form-group">
              <label for="Address1" class="col-md-4 control-label text-right trkLabelMargin">Address</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Address1, new { @placeholder = "Address ", @class = "  form-control" })
                  @Html.ValidationMessageFor(model => model.Address1)
              </div>
              @*<label for="Address2" class="col-md-4 control-label text-right trkLabelMargin" >Address2</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Address2, new { @placeholder = "Address 2", @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.Address2)
              </div>*@
            </div>

            <div class="form-group">
              @*<label for="Address3" class="col-md-4 control-label text-right trkLabelMargin">Address3</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Address3, new { @placeholder = "Address 3", @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.Address2)
              </div>*@
              <label for="City" class="col-md-4 control-label text-right trkLabelMargin">City</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.City, new { @placeholder = "City", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.City)
              </div>
            </div>

            <div class="form-group">
              
              <label for="Country" class="col-md-4 control-label text-right trkLabelMargin">Country</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Country, new { @placeholder = "Country", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.Country)
              </div>
            </div>

            <div class="form-group">
              <label for="Email" class="col-md-4 control-label text-right trkLabelMargin">Email</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Email, new { @placeholder = "Email", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.Email)
              </div>
              <label for="FaxNo" class="col-md-4 control-label text-right trkLabelMargin">FaxNo</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.FaxNo, new { @placeholder = "Fax Number", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.FaxNo)
              </div>
              
            </div>

            <div class="form-group">
              @*<label for="VDSPercent" class="col-md-4 control-label text-right trkLabelMargin">VDSPercent</label>
              <div class="col-md-8" style="margin-bottom:6px;">
                  <div class="input-group">
                      @Html.TextBoxFor(model => model.VDSPercent, new { @placeholder = "VDS Percent", @class = "priceLen form-control" })
                      <span class="input-group-addon">%</span>  
                      @Html.ValidationMessageFor(model => model.VDSPercent)
                  </div>
                </div>*@
              <label for="TelephoneNo" class="col-md-4 control-label text-right trkLabelMargin">Telephone No</label>
              <div class="col-md-8">
                  @Html.TextBoxFor(model => model.TelephoneNo, new { @placeholder = "Telephone No.", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.TelephoneNo)
              </div>

              <label for="Comments" class="col-md-4 control-label text-right trkLabelMargin">Comments</label>
              <div class="col-md-8">
                  @Html.TextAreaFor(model => model.Comments, new { @placeholder = "Comments", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.Comments)
              </div>

            </div>


            <div class="form-group">
                <label for="ShortName" class="col-md-4 control-label text-right trkLabelMargin">Short Name</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.ShortName, new { @placeholder = "Short Name", @class = "cShortName form-control" })
                    @Html.ValidationMessageFor(model => model.ShortName)
                </div>


            </div>

            <label class="col-md-4 control-label text-right trkLabelMargin">Register</label>
            <div class="form-group">
                <div class="col-md-2" style="margin-top:6px;">
                    @Html.SimpleDropDownFor(m => m.IsRegister, "/Config/DropDown/DecisionList", new { @class = " cIsRegister trNavigateMenu form-control required" })
                </div>
            </div>

            <label class="col-md-4 control-label text-right trkLabelMargin">Turnover</label>
            <div class="form-group">
                <div class="col-md-2" style="margin-top:6px;">
                    @Html.SimpleDropDownFor(m => m.IsTurnover, "/Config/DropDown/DecisionList", new { @class = " cIsTurnover trNavigateMenu form-control required" })
                </div>
            </div>


                <label class="col-md-4 control-label text-right trkLabelMargin">Is Active</label>
                <div class="form-group">
                    <div class="col-md-2" style="margin-top:6px;">
                        @Html.SimpleDropDownFor(m => m.ActiveStatus, "/Config/DropDown/DecisionList", new { @class = " trNavigateMenu form-control required" })
                    </div>
                </div>
            </div>
    </div>
    </div>
    
    <div class="col-md-12 trkPX-0">
    <div class="thinbox animated zoomIn faster" >
        <div class="th_thinbox">
            <p>Contact Person</p>
        </div>
        <div class="row">
            <div class="form-group">
              <label for="ContactPerson" class="col-md-2 control-label text-right trkLabelMargin">Name</label>
              <div class="col-md-4">
                  @Html.TextBoxFor(model => model.ContactPerson, new { @placeholder = "Contact Person", @class = "   form-control" })
                  @Html.ValidationMessageFor(model => model.ContactPerson)
              </div>
              <label for="ContactPersonDesignation" class="col-md-2 control-label text-right trkLabelMargin" >Designation</label>
              <div class="col-md-4">
                  @Html.TextBoxFor(model => model.ContactPersonDesignation, new { @placeholder = "Designation", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.ContactPersonDesignation)
              </div>
            </div>

            <div class="form-group">
              <label for="ContactPersonTelephone" class="col-md-2 control-label text-right trkLabelMargin">Telephone</label>
              <div class="col-md-4">
                  @Html.TextBoxFor(model => model.ContactPersonTelephone, new { @placeholder = "Telephone No.", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.ContactPersonTelephone)
              </div>
              <label for="ContactPersonEmail" class="col-md-2 control-label text-right trkLabelMargin">Email</label>
              <div class="col-md-4">
                  @Html.TextBoxFor(model => model.ContactPersonEmail, new { @placeholder = "Email", @class = " form-control" })
                  @Html.ValidationMessageFor(model => model.ContactPersonEmail)
              </div>
            </div>
        </div>
    </div>
    </div>
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="pageSubmit('frmVendorMy')" class="sym-btn-save">&nbsp;Save</button>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="pageSubmit('frmVendorMy')" class="sym-btn-update">&nbsp;Update</button>
        }
        <button type="button" title="Go To Index" data-url="/VMS/Vendor" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New Vendor" data-url="/VMS/Vendor/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
}

<script>
    $(function () {
        valiDation("frmVendorMy");

        var operation = '@Model.Operation';
        if (operation == "update") {
            navigatePage();
        }

        function navigatePage() {
            var interval = setInterval(function () {
                if (document.querySelectorAll('.trNavigateMenu option').length > 0) {
                    var id = '@Model.VendorID';
                    $('.trNavigateMenu').select2("val", id);
                    clearInterval(interval);
                }
            }, 200);
            ////navigating previous-next
            $('.changePage').click(function () {
                var id = '@Model.VendorID';
                var btn = $(this).attr("data-pager-action");
                if (btn.toLocaleLowerCase() == "current") {
                    var targetId = $('.trNavigateMenu').val();
                    if (id == targetId) {
                        return;
                    }
                    id = targetId;
                }
                window.location = "/VMS/Vendor/Navigate?id=" + id + "&btn=" + btn;
            });
        }
    });
</script>
       