@model SymViewModel.Sage.GLReportVM
@using UIHelper.MVC
@using SymOrdinary
@using System.Threading;
@{ 
    
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/Sage/Home/Login");
        return;
    }
}


<div class="th_thinbox">
    <p>(02) BDE Requisition Date Range (Multiple Month) - All DocumentType Amount</p>
</div>
<div class="BDERequisitionDetailsBar2">
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.BranchId)
            </div>
        </div>
        <div class="col-md-8">
            <div class="editor-field">
               @* @if (identity.IsAdmin || identity.IsAuditor)
                {
 @Html.SimpleDropDown("BranchIdBDER2", "/Config/DropDown/GL_GLBranchAll", new { @Id = "bid", @class = "branchIdBDER2 form-control selectDropdown" })
                }
                else
                {
 @Html.SimpleDropDownFor(model => model.BranchId, "/Config/DropDown/GL_GLBranch", new { @Id = "bid", @class = "branchIdBDER2 form-control ", @disabled = "disabled" })
                }*@
 @Html.SimpleDropDownFor(model => model.BranchId, "/Config/DropDown/GL_GLBranch", new { @Id = "bid", @class = "branchIdBDER2 form-control ", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.BranchId)
                @Html.HiddenFor(model => model.BranchId)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.DateFrom)
            </div>
        </div>
        <div class="col-md-8">
            <div class="editor-field">
                @Html.TextBox("DateFromBDER2", null, new { @placeholder = "Date From", @class = "dtFromBDER2 customDatePicker form-control" })
                @Html.ValidationMessageFor(model => model.DateFrom)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="editor-label">
                @Html.LabelFor(model => model.DateTo)
            </div>
        </div>
        <div class="col-md-8">
            <div class="editor-field">
                @Html.TextBox("DateToBDER2", null, new { @placeholder = "Date To", @class = "dtToBDER2 customDatePicker form-control" })
                @Html.ValidationMessageFor(model => model.DateTo)
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
    <div class="row">&nbsp;  </div>
    <div class="row">
        &nbsp;
        <button title="Click to Show BDE Requisition Date Range (Multiple Month) - All DocumentType Amount" id="" class=" searchBtnBDER2 sym-btn-search">&nbsp;Search</button>
    </div>
    <hr />
    <div class="row">
        <div class="container  col-md-12 ">
            <h2 class="card-header ">BDE Requisition Details</h2>
            <div class="card-block">
                <canvas id="myBarChartBDER2" height="20" width="20"></canvas>
            </div>
        </div>
    </div>
</div>


<script>
    $(".searchBtnBDER2").click(function () {
        SearchingBDER2();
    });

    function SearchingBDER2() {

        var branchId = $(".branchIdBDER2 :selected").val();
        var DateFrom = $(".dtFromBDER2").val();
        var DateTo = $(".dtToBDER2").val();
        Obj = new Object();

        Obj.branchId = branchId;
        Obj.DateFrom = DateFrom;
        Obj.DateTo = DateTo;
        var Param = $.param(Obj);
        loadsbarBDER2(Param);
    }
</script>

<script>
    function loadsbarBDER2(Param) {
        $('#myBarChart').html("");
        backgroundColor = bkColor();
        var labels = [];
        var datas = [];
        $.ajax({
            url: "/Sage/Home/BDERequisitionChart2" + "?" + Param,
            type: 'GET',
            beforeSend: function () { $(".loading").show(); },
            complete: function () { $(".loading").fadeOut(200).hide("slow") },
            success: function (data) {
                $.each(data, function (index, value) {
                    labels.push(value.DocumentType + '=>' + value.TransactionAmount);
                    datas.push(value.TransactionAmount);
                });
                var ctx = document.getElementById("myBarChartBDER2").getContext('2d');
                var myChart = new Chart(ctx,
                    {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Document Type',
                                data: datas,
                                backgroundColor: backgroundColor
                            }]
                        }

                    }).show;
            },
        });

    }
</script>
