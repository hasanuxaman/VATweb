@model VATViewModel.DTOs.UserInformationVM
@using UIHelper.MVC
@using (Html.BeginForm("ChangePassword", "UserInformation", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmUserInfo" }))
{ 
    
    <div class="thinbox formDesign">
        <div class="th_thinbox">
            <p>Password Change Information</p>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="editor-label">
                    <label>User Name</label>
                </div>
                <div class="editor-field">
                    @if (Model.UserName.ToLower() == "admin")
                    {
                        @Html.SimpleDropDownFor(m => m.UserName, "/Config/DropDown/Users", new { @class = " trUserName required form-control selectDropdown" })

                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.UserName, new { @placeholder = "UserName", @class = " trUserName required form-control", @readonly = "readonly" })

                    }
                </div>
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

            <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        <label>Old Password</label>
                    </div>
                    <div class="editor-field">
                        @if (Model.UserName.ToLower() == "admin")
                        {
                            @Html.PasswordFor(model => model.UserPassword, new { @autocomplete = "off", placeholder = "Password", @class = " form-control" })

                        }
                        else
                        {
                            @Html.PasswordFor(model => model.UserPassword, new { @autocomplete = "off", placeholder = "Password", @class = "  required form-control" })
                        }

                    </div>
                    @Html.ValidationMessageFor(model => model.UserPassword)
                </div>

            </div>
           
        <div class="row">
             <div class="col-md-2">
                 <div class="editor-label">
                     <label>New Password</label>
                 </div>  
            
                <div class="editor-field">
                    @Html.PasswordFor(model => model.NewPassword, new { @value = "", @autocomplete = "off", placeholder = "New Password", @class = "  required form-control" })
                </div>
                 @Html.ValidationMessageFor(model => model.NewPassword)

            </div>
        </div>
         <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        <label>Reconfirm Password</label>
                    </div>
                    <div class="editor-field">
                        @*@Html.PasswordFor(model => model.ConfirmPassword, new { @value = "", @autocomplete = "off", placeholder = "Confirm Password", @class = "  required form-control" })*@
                        @Html.Password("ConfirmPassword", "", new { @value = "", @autocomplete = "off", placeholder = "Confirm Password", @class = "  required form-control", @id = "ConfirmPassword" })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.ConfirmPassword)*@
                    @Html.ValidationMessage("ConfirmPassword")
                </div>
             <div class="col-md-2">

             </div>

        </div>

           <div class="row">
               <div class="col-md-1">
                   <div class="editor-label">
                       <label>&nbsp;</label>
                   </div>
                   <div class="editor-field">
                       <button type="button" title="Save Data" onclick="ChangePassword()" class="sym-btn-edit">&nbsp;Change</button>
                   </div>
               </div>
            
        </div>
    </div>
    

}
<script>
    function ChangePassword() {
        var user = $('#UserName').val();
        //alert(user);
        if (user == "" || user == "0") {
            ShowResult("Fail", "Please select an user first!");
            return;
        }
        var currentPass = $('#UserPassword').val();
        if (currentPass == null || currentPass == "") {
            ShowResult("Fail", "Current password can't be empty");
            return;
        }
        var newPassword = $('#NewPassword').val();
        var conPassword = $('#ConfirmPassword').val();

        if (newPassword !== conPassword) {
            ShowResult("Fail", "New Password doesn't match with Confirmed Password");
            return;
        }
        pageSubmit('frmUserInfo');

    }
</script>

