@model VATViewModel.DTOs.TransferIssueVM
@using UIHelper.MVC
@using SymOrdinary
@using System.Threading;
@using VATServer.Ordinary
@{
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/VMS/Home/Login");
        return;
    }
}

@{
    ViewBag.Title = "Index";
}
@Html.HiddenFor(model => model.TransactionType, new { @class = " cTransactionType" })

<div class="headrow">
    <div style="display: none" id="formAppend"></div>
    <button type="button" title="Add New Issue" data-url="/VMS/TransferIssue/Create?tType=@Model.TransactionType" onclick="GoTo(this)" id="" class="sym-btn-add ">&nbsp;New</button>
    @*<label class="pull-right">Transfer Issue (@Model.TransactionType)</label>*@

    @if (@Model.TransactionType == "62Out")
    {
        <label class="pull-right">Transfer Issue > FG(Out)</label>
    }
    else if (@Model.TransactionType == "61Out")
    {
        <label class="pull-right">Transfer Issue > RM(Out)</label>
    }
    else
    {
        <label class="pull-right">Transfer Issue (@Model.TransactionType)</label>
    }


</div>

<div class=" tabMenu">
    <ul style="font-size: 1.4em;" class="tabDesign nav nav-tabs">
        <li class="tabDefault active"><a data-toggle="tab" href="#TransferIndex">Index</a></li>
        <li class="tabDefault"><a data-toggle="tab" href="#Excel" class="vdsInfoTab">Excel Upload</a></li>
        <li class="tabDefault"><a data-toggle="tab" href="#Integration" class="">Integration</a></li>
    </ul>
</div>


<div class="tab-content">
    <div id="TransferIndex" class="tab-pane fade  in active">

        <div class="thinbox  animated zoomIn faster">
            <div class="th_thinbox">
                <p>Transfer Issue List</p>
            </div>
            <div class="dtSearch formDesign">
                <div class="row">
                    @*<div class="col-md-2">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.TransferIssueNo)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.TransferIssueNo, new { @placeholder = "Transfer Issue No", @class = "  form-control" })
                            </div>
                        </div>*@

                    <div class="col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SearchField)
                        </div>
                        <div class="editor-field">
                            @Html.SimpleDropDownFor(m => m.SearchField, "/Config/DropDown/TransferIssueColumnSearch", new { @class = " form-control " })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SearchValue)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.SearchValue, new { @class = "  form-control" })
                        </div>
                    </div>


                    <div class="col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IssueDateFrom)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IssueDateFrom, new { @placeholder = "Issue Date From", @class = "customDatePicker defaultDate  form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IssueDateTo)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IssueDateTo, new { @placeholder = "Issue Date To", @class = "customDatePicker defaultDate  form-control" })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Post)
                        </div>
                        <div class="editor-field">
                            <select id="Post" class="form-control">
                                <option value=""></option>
                                <option value="Y">Y</option>
                                <option value="N">N</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            <label>Branch Name</label>
                        </div>
                        <div class="editor-field">
                            @*@Html.SimpleDropDownFor(model => model.BranchId, "/Config/DropDown/BranchProfile", new { @class = " form-control" })*@
                            @*@Html.SimpleDropDownFor(model => model.BranchId, "/Config/DropDown/UserBranchProfile", new { @class = " form-control" })*@
                            @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BranchList, "BranchID", "BranchName", Model.BranchId), new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    @*<div class="col-md-1">
                            <div class="editor-label">
                                <label>Select Top</label>
                            </div>
                            <div class="editor-field">
                                @Html.SimpleDropDownFor(model => model.SelectTop, "/Config/DropDown/RecordSelectList", new { @class = " cBranchId form-control" })
                            </div>
                        </div>*@

                    <div class="col-md-4">
                        <div class="editor-label">
                            <label>&nbsp;</label>
                        </div>
                        <div class="editor-field">
                            <button type="button" title="Click to Search" id="btnDialog" class="sym-btn-search">&nbsp;Search</button>
                            <button type="button" title="Clear Data" id="Clear" class=" sym-btn-clear">&nbsp;Clear</button>
                            <button type="button" title="Post Data" onclick="PostData()" class="sym-btn-post">&nbsp;Post</button>
                            <button type="button" title="Export Data" onclick="ExportExcel()" class="sym-btn-Excel-Export">&nbsp;Export</button>
                        </div>
                    </div>


                    <div class="editor-label">
                        <label>Export All</label>
                        @Html.CheckBox("ExportAll", new { id = "idExportAll", @class = "cExportAll form-control", @name = "att[]" })
                    </div>

                    <div class="col-md-7">
                        <div class="editor-label">
                            <label>&nbsp;</label>
                        </div>
                        <div class="editor-field">
                            &nbsp;
                        </div>
                    </div>
                </div>
            </div>
            <p>&nbsp;</p>
            <table id="myDataTable" class="display">
                <thead>
                    <tr>
                        <th class="center"><input type="checkbox" class="chkAll" />Action</th>
                        <th>Transfer Issue No</th>
                        <th>Transaction Date</th>
                        <th>TotalAmount</th>
                        <th>Transfer To</th>
                        <th>Serial No</th>
                        <th>Is Posted</th>
                        <th>Import ID</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <br />
        </div>

        <div class="headrow">
            <button type="button" title="Add New Issue" data-url="/VMS/TransferIssue/Create?tType=@Model.TransactionType" onclick="GoTo(this)" id="" class="sym-btn-add ">&nbsp;New</button>
        </div>
        @*<div class="thinbox row">
                <div class="th_thinbox">
                    <p>Excel Import</p>
                </div>
                @using (Html.BeginForm("ImportExcel", "IssueHeader", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmIssueImport" }))
                {
                    @Html.HiddenFor(model => model.transactionType)

                    <div class="col-md-offset-6 col-md-6 verticalLine">
                        <div class="col-md-6">
                            <label>File</label>
                            @Html.TextBoxFor(model => model.File, new { @type = "file", @accept = ".xlsx", @class = " form-control" })
                        </div>
                        <div class="col-md-6">
                            <label>&nbsp;</label>
                            <button type="button" onclick="pageSubmit('frmIssueImport');" class="sym-btn-file-upload">&nbsp;Upload</button>
                        </div>
                    </div>
                }
            </div>*@

    </div>

    <div id="Excel" class="tab-pane fade  in ">

        <div class="thinbox row">
            <div class="th_thinbox">
                <p>Excel Import</p>
            </div>
            @using (Ajax.BeginForm("ImportExcel", "TransferIssue", null, new AjaxOptions { }, new { enctype = "multipart/form-data", @Id = "frmTransferIssueImport" }))
            {
                @Html.HiddenFor(model => model.TransactionType)

                <div class="col-md-offset-6 col-md-6 verticalLine">
                    <div class="col-md-6">
                        <label>File</label>
                        @Html.TextBoxFor(model => model.File, new { @type = "file", @accept = ".xlsx", @class = " form-control" })
                    </div>
                    <div class="col-md-6">
                        <label>&nbsp;</label>
                        <button type="button" onclick="pageSubmit('frmTransferIssueImport');" class="sym-btn-file-upload">&nbsp;Upload</button>
                    </div>
                </div>
            }
        </div>

    </div>

    <div id="Integration" class="tab-pane fade  in formDesign">
        <div class="thinbox">
            <div class="th_thinbox">
                <p>Integration</p>
            </div>
            @Html.HiddenFor(model => model.TransactionType)


            @if (Convert.ToString(Session["CompanyCode"]) == "BCL")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_BCL.cshtml")

            }
            else if (OrdinaryVATDesktop.IsACICompany(Convert.ToString(Session["CompanyCode"])))
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_ACI.cshtml")

            }
            else if (Convert.ToString(Session["CompanyCode"]) == "KCCL")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_KCCL.cshtml")

            }
            else if (Convert.ToString(Session["CompanyCode"]) == "SMC" || Convert.ToString(Session["CompanyCode"]).ToLower() == "smcholding")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_SMC.cshtml")

            }

            else if (Convert.ToString(Session["CompanyCode"]) == "EON" || Convert.ToString(Session["CompanyCode"]).ToLower() == "purofood" || Convert.ToString(Session["CompanyCode"]).ToLower() == "eahpl" || Convert.ToString(Session["CompanyCode"]).ToLower() == "eail" || Convert.ToString(Session["CompanyCode"]).ToLower() == "eeufl" || Convert.ToString(Session["CompanyCode"]).ToLower() == "exfl")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_EON.cshtml")

            }

            else if (Convert.ToString(Session["CompanyCode"]) == "DECATHLON")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_Decathlon.cshtml")

            }

            else if (Convert.ToString(Session["CompanyCode"]) == "BERGER")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_Berger.cshtml")

            }

            else if (Convert.ToString(Session["CompanyCode"]) == "JAPFA")
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_JAPFA.cshtml")

            }

            else if (OrdinaryVATDesktop.IsNourishCompany(Convert.ToString(Session["CompanyCode"])))
            {
                @Html.Partial("~/Areas/VMS/Views/Integration/_TransferHeader_Nourish.cshtml")

            }


        </div>
    </div>

</div>

<script>   

    debugger;
    var fileInput = document.getElementById('File');
    fileInput.addEventListener('change', function () {
        debugger;
        var filePath = this.value;
        var allowedExtensions = /(\.xls[xm]?|\.xlsm|\.csv|\.txt|\.sun)$/i;
        if (filePath) {
            if (!allowedExtensions.test(filePath)) {
                ShowResult("Warning", "Please select files with allowed extensions: .xls, .xlsx, .xlsm, .csv, .txt, .sun");
                this.value = '';
            }
        }
    });


</script>

<script>

    function PostData() {

        var questionMSG = "Are you sure to Post Data!";

        Ask(questionMSG, function () {


            var IDs = [];
            var $Items = $("#TransferIndex  .dSelected:input:checkbox:checked");

            if ($Items == null || $Items.length == 0) {
                ShowResult("Fail", "You are requested to Select before Post!");
                return;
            }

            $Items.each(function () {
                var ID;
                ID = $(this).attr("data-Id");

                var vID = ID.split("~")[0];

                IDs.push(vID);
            });

            var model = {
                IDs: IDs
            }
            var url = '/VMS/TransferIssue/MultiplePost';

            $.ajax({
                url: url
                , data: model
                , type: 'Post'
                , traditional: true
                , beforeSend: function () { $(".loading").show(); }
                , success: function (rVM) {
                    ShowResult(rVM.Status, rVM.Message);
                }
                , complete: function () { $(".loading").fadeOut(200).hide("slow") }

            });
        });

    }
    function ExportExcel() {
        debugger;
        var questionMSG = "Are you sure to Export Excel!";

        Ask(questionMSG, function () {
            var SearchField = $('#SearchField').val();
            var SearchValue = $('#SearchValue').val();

            var TransferIssue = $('#TransferIssue').val();
            var CustomerID = $('#CustomerID').val();
            var IssueDateFrom = $('#IssueDateFrom').val();
            var IssueDateTo = $('#IssueDateTo').val();
            var Post = $('#Post').val();
            var InvoiceDateTimeTo = $('#InvoiceDateTimeTo').val();
            var BranchId = $('#BranchId').val();
            var BranchId = $('#BranchId').val();

            var SelectTop = $('#SelectTop').val();
            var ExportAll = $('#idExportAll').is(":checked");
            var TransactionType = $('.cTransactionType').val();
            debugger;
            var IDs = [];
            var $Items = $("#TransferIndex  .dSelected:input:checkbox:checked");

            if (!ExportAll) {
                if ($Items == null || $Items.length == 0) {
                    ShowResult("Fail", "You are requested to Select before Export!");
                    return;
                }
            }

            $Items.each(function () {
                debugger;
                var ID;
                ID = $(this).attr("data-Id");

                var vID = ID.split("~")[0];

                IDs.push(vID);
            });

            var model = {
                IDs: IDs
            }
            var url = '/VMS/TransferIssue/ExportExcel';
            var form = $('<form action="' + url + '"></form>');

            IDs.forEach(function (item) {
                debugger;
                form.append($('<input  value="' + item + '" name="IDs" />'))

            })

            form.append($('<input  value="' + SearchField + '" name="SearchField" />'))
            form.append($('<input  value="' + SearchValue + '" name="SearchValue" />'))
            form.append($('<input  value="' + IssueDateFrom + '" name="IssueDateFrom" />'))
            form.append($('<input  value="' + IssueDateTo + '" name="IssueDateTo" />'))
            form.append($('<input  value="' + Post + '" name="Post" />'))
            form.append($('<input  value="' + Post + '" name="Post" />'))
            form.append($('<input  value="' + BranchId + '" name="BranchId" />'))

            form.append($('<input  value="' + SelectTop + '" name="SelectTop" />'))
            form.append($('<input  value="' + ExportAll + '" name="ExportAll" />'))
            form.append($('<input  value="' + TransactionType + '" name="TransactionType" />'))

            form.appendTo('#formAppend').submit()
            // form.appendTo('body').submit()

            //$.ajax({
            //    url: url
            //    , data: model
            //    , type: 'Post'
            //    , traditional: true
            //    , beforeSend: function () { $(".loading").show(); }
            //    , success: function (rVM) {
            //        ShowResult(rVM.Status, rVM.Message);
            //    }
            //    , complete: function () { $(".loading").fadeOut(200).hide("slow") }

            //});
        });

    }

</script>



<script language="javascript" type="text/javascript">

    function btnPostTransferIssue(sender) {
        var IdPost = $(sender).attr('data-Id');
        var TransferIssueNo = IdPost.split('~')[0];
        var Post = IdPost.split('~')[1];
        if (Post.toLowerCase() == 'true' || Post.toLowerCase() == 'y') {
            ShowResult("Fail", "Data Already Posted!");
            return;
        }
        var url = $(sender).attr("data-url") + "?TransferIssueNo=" + TransferIssueNo;
        var questionMSG = "Are you sure to Post Data!";
        singleOperation(questionMSG, url);
    }

    $(document).ready(function () {

        SelectAllForDelete();
        $.datepicker.regional[""].dateFormat = 'dd/M/y';
        $.datepicker.setDefaults($.datepicker.regional['']);
        var oTable = $('#myDataTable').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/VMS/TransferIssue/_index?transactionType=@Model.TransactionType",
            "bProcessing": true,
            "aLengthMenu": tablelength(),
            "bJqueryUI": true,
            "bAutoWidth": false,

            "fnServerData": function (sSource, aoData, fnCallback) {
                $('.dtSearch :input').each(function () {
                    var Name = $(this).attr("Id")
                    var Value = $(this).val()
                    aoData.push({ "name": Name, "value": Value });
                });
                $.getJSON(sSource, aoData, function (json) {
                    fnCallback(json);
                });
            },

            "aoColumns": [
                            {
                                "sName": "Id",
                                "bSearchable": false,
                                "bSortable": false,
                                "sWidth": "12%",
                                "sClass": "center",
                                "fnRender": function (oObj) {
                                    return ' <input onclick="CheckAll(this)" class="dSelected" type="checkbox" data-Id="' + oObj.aData[0] + '">'
                                    + '&nbsp; <a title="Click on for Edit" href=\"/VMS/TransferIssue/Edit/' + oObj.aData[0].split('~')[0] + '?TransactionType=' + oObj.aData[8] + '\" class="sym-btn-edit-row"></a>'
                                        + '&nbsp; <a title="Click on for Post" data-url="/VMS/TransferIssue/Post"  onclick=btnPostTransferIssue(this); data-Id="' + oObj.aData[1] + '~' + oObj.aData[0].split('~')[1] + '\" class="sym-btn-post-row"></a>'
                                    ;
                                }
                            }
                            , { "sName": "TransferIssueNo", "sWidth": "20%" }
                            , { "sName": "TransactionDateTime", "sWidth": "10%" }
                            , { "sName": "TotalAmount", "sWidth": "15%" }
                            , { "sName": "TransferTo", "sWidth": "10%" }
                            , { "sName": "SerialNo", "sWidth": "12%" }
                            , { "sName": "Post", "sWidth": "10%" }
                            , { "sName": "ImportIDExcel", "sWidth": "10%" }
            ]
        });

        $('#btnDialog').click(function () {
            var model = $('.dtSearch :input').serialize();
            $.ajax({
                url: "/VMS/TransferIssue/Index",
                cache: false,
                data: model,
                success: function (html) {
                    oTable.fnDraw();
                }
            });
        });
        ////clearing fields
        $("#Clear").on('click', function () {
            $(".Dropdown").select2("val", "");
            $(".form-control").val("");
        });

    });
</script>

