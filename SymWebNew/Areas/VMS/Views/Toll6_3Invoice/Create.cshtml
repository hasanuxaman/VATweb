<style>
    .NoPaddingLR {
        padding-left: 0px;
        padding-right: 0px;
    }
</style>
@model VATViewModel.DTOs.Toll6_3InvoiceVM
@using UIHelper.MVC
@using (Html.BeginForm("CreateEdit", "Toll6_3Invoice", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmToll6_3Invoice" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Operation)
    @Html.HiddenFor(model => model.TransactionType)
    @Html.HiddenFor(model => model.CustomerID)
    @Html.HiddenFor(model => model.Post)
    @Html.HiddenFor(model => model.BranchId)
    
    
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="SaveData()" class="sym-btn-save">&nbsp;Save</button>
            <label class="pull-right">Toll Invoice > Create</label>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="SaveData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData(this)" class="sym-btn-post">&nbsp;Post</button>
            <label class="pull-right">Toll Invoice > Edit</label>
        }
        <button type="button" title="Go To Index" data-url="/VMS/Toll6_3Invoice" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New" data-url="/VMS/Toll6_3Invoice/Create?TransactionType=@Model.TransactionType" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>
    </div>

    if (Model.Operation == "update")
    {
        <div class="col-sm-12 col-md-12">
            <div class="input-group   col-lg-8  col-md-8  col-sm-8 col-xs-12 text-color col-md-offset-2" style="">
                <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='first' id="first"><i class="fa fa-angle-double-left"></i>First</a>
                <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='previous' id="precode"><i class="fa fa-angle-left"></i>Previous</a>
                @Html.SimpleDropDown("", "/Config/DropDown/IdNameDropdown?tableName=Currencies&Id=CurrencyId&Name=CurrencyName&AllData=no&code=CurrencyCode", new { @class = " trNavigateMenu form-control selectDropdown " })
                <a class="input-group-addon btn btn-primary changePage" data-pager-action='current' id="current"><i class="fa fa-search"></i></a>
                <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='next' id="nextcode">Next <i class="fa  fa-angle-right"></i></a>
                <a class="input-group-addon btn btn-primary hidden-xs changePage" data-pager-action='last' id="last">Last <i class="fa  fa-angle-double-right"></i></a>
            </div>
        </div>
    }

    <div class="col-md-12 NoPaddingLR">
        <div class="thinbox animated zoomIn faster">
            <div class="th_thinbox">
                <p>Toll Invoice</p>
            </div>
            <div class="row">
                <div class="col-md-6 trkPX-0">


                    <div class="form-group">
                        <label for="Name" class="col-md-4 control-label text-right trkLabelMargin">Toll No</label>
                        <div class="col-md-7 ">
                            <div class="col-md-6 ">
                                @Html.TextBoxFor(model => model.TollNo, new { @placeholder = "Toll No", @class = " form-control", @readonly = "readonly"  })
                            </div>
                            @Html.ValidationMessageFor(model => model.TollNo)
                        </div>

                    </div>






                    <div class="form-group">
                        <label for="Name" class="col-md-4 control-label text-right trkLabelMargin">Toll Date</label>
                        <div class="col-md-8 ">
                            <div class="col-md-6 ">
                                @Html.TextBoxFor(model => model.TollDateTime, new { @placeholder = "Toll Date", @class = " tollDate customDatePicker defaultDate form-control" })
                                @Html.ValidationMessageFor(model => model.TollDateTime)
                            </div>
                        </div>
                    </div>







                    <div class="form-group">
                        <label for="Country" class="col-md-4 control-label text-right trkLabelMargin">Customer</label>
                        <div class="col-md-8">
                            <div class="col-md-6 trkPX-0">
                                @Html.TextBoxFor(model => model.CustomerName, new { @placeholder = "Customer", @class = " cCustomerName form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.CustomerName)
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Comments" class="col-md-4 control-label text-right trkLabelMargin">Address</label>
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.Address, new { @placeholder = "Address", @class = " cAddress  form-control" })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                        <button type="button" class=" sym-btn-search tIssueBtn"> Search</button>
                    </div>

                </div>

                <div class="thinbox col-md-12 formDesign trkMY-0">

                    <div class="fixedParent">

                        <table class="trkFixTable" id="itemTable">
                            <thead>
                                <tr>
                                    <th>LineNo</th>
                                    <th>InvoiceNo</th>
                                    <th>InvoiceDate</th>
                                </tr>
                            </thead>

                            <tbody id="editorItemRows4">
                                @if (Model.Details != null)
                                {
                                    //foreach (var item in Model.Details)
                                    //{
                                    //}
                                    Html.RenderPartial("_detail", Model.Details);

                                }
                            </tbody>
                        </table>

                    </div>
                    <hr />
                    <div class="row trkBelowDiv">
                        <div class="col-md-2 trkLabelTopRight">
                            <label>Comments</label>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-field ">
                                @Html.TextAreaFor(model => model.Comments, new { @class = " form-control" })
                            </div>
                        </div>
                    </div>

                </div>


            </div>
        </div>
    </div>

    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="SaveData()" class="sym-btn-save">&nbsp;Save</button>
            <label class="pull-right">Toll Invoice > Create</label>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="SaveData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData(this)" class="sym-btn-post">&nbsp;Post</button>
            <button type="button" class=" sym-btn-report vat11Report">&nbsp;Toll 6.3</button>
            
            
            <label class="pull-right">Toll Invoice > Edit</label>
        }
        <button type="button" title="Go To Index" data-url="/VMS/Toll6_3Invoice" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New" data-url="/VMS/Toll6_3Invoice/Create?TransactionType=@Model.TransactionType" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>
    </div>
}

<div id="myModal" class="trkmodal"></div>
<div id="productDetails" class="trkmodal">
    <div class="trkmodal-content">
    </div>
</div>
<div id="myHigherModal" class="HigherModal"></div>




@*------------------------------fixed header column table------------------------------*@

<script>
    function fixedScrolltrkFixedTable(tableId, leftTotal) {
        $('#' + tableId + ' tbody').scroll(function (e) {
            var i;
            var j = 2;
            for (i = 1; i <= leftTotal; i++) {
                $('#' + tableId + ' tbody td:nth-child(' + i + ')').css("z-index", "1");
                $('#' + tableId + ' thead th:nth-child(' + i + ')').css("left", $("#" + tableId + " tbody").scrollLeft());

                $('#' + tableId + ' tbody td:nth-child(' + j + ')').css("z-index", "1");
                $('#' + tableId + ' tbody td:nth-child(' + j + ')').css("left", $("#" + tableId + " tbody").scrollLeft());
                $('#' + tableId + ' tbody td:nth-child(' + j + ')').css("left", $("#" + tableId + " tbody").scrollLeft());
                j++;
            }
            $('#' + tableId + ' thead').css("left", -$("#" + tableId + " tbody").scrollLeft());
            //$('#' + tableId + ' thead th:nth-child(2)').css("left", $("#" + tableId + " tbody").scrollLeft());

        });
    }

    function settingtrkFixedColumnWidth(tableId, widthArgs) {
        if (widthArgs == null) {
            return;
        }
        var i;
        var j = 2;
        for (i = 1; i <= widthArgs.length; i++) {
            $('#' + tableId + ' tr td:nth-child(' + j + ')').css("min-width", widthArgs[i - 1] + "px");
            $('#' + tableId + ' tr th:nth-child(' + i + ')').css("min-width", widthArgs[i - 1] + "px");
            j++;
        }
    }

    function fixLeftColumns(tableId, leftTotal) {
        var i;
        var j = 2;
        for (i = 1; i <= leftTotal; i++) {
            //fixed column header style
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("height", "30px");
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("position", "relative");
            $('#' + tableId + ' thead th:nth-child(' + i + ')').css("z-index", "2");
            //fixed column rows style
            $('#' + tableId + ' tbody tr td:nth-child(' + j + ')').css("height", "30px");
            $('#' + tableId + ' tbody tr td:nth-child(' + j + ')').css("position", "relative");
            j++;
        }
    }

    function settingWidth(tableId) {
        //var parentWidth = $('.fixedParent').width();
        var parentWidth = $('#' + tableId).closest('.fixedParent').width();
        $('#' + tableId + ' thead').width(parentWidth);
        $('#' + tableId + ' tbody').width(parentWidth);
    }

    function trkFixedTable(tableId, leftTotal, args) {
        settingWidth(tableId);
        fixLeftColumns(tableId, leftTotal);
        fixedScrolltrkFixedTable(tableId, leftTotal);
        settingtrkFixedColumnWidth(tableId, args);
    }

    function callingFixedTable() {
        var args = [160, 200, 150, 100, 150, 100, 100, 150, 100, 100, 100, 150, 150, 150, 100, 100, 150, 150, 100, 100, 150, 100, 100, 100, 100, 100, 100, 100, 100, 150, 100, 100,
            150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150];
        trkFixedTable("itemTable", 2, args);
    }
    $(function () {
        callingFixedTable();
    })


    $(function () {
        $('.tIssueBtn').click(function () {
            var url = "/Vms/Toll6_3Invoice/GetItemPopUp";
            modalInitHigher(url);
        });
    })


    function navigatePage() {
        var interval = setInterval(function () {
            if (document.querySelectorAll('.trNavigateMenu option').length > 0) {
                var id = '@Model.Id';
                $('.trNavigateMenu').select2("val", id);
                clearInterval(interval);
            }
        }, 200);
        ////navigating previous-next
        $('.changePage').click(function () {
            var id = '@Model.Id';
            var btn = $(this).attr("data-pager-action");
            if (btn.toLocaleLowerCase() == "current") {
                var targetId = $('.trNavigateMenu').val();
                if (id == targetId) {
                    return;
                }
                id = targetId;
            }
            window.location = "/VMS/Toll6_3Invoice/Navigate?id=" + id + "&btn=" + btn;
        });
    }

    $(function () {
        valiDation("frmToll6_3Invoice");
        var operation = '@Model.Operation';
        if (operation == "update") {
            navigatePage();
        }
    });

    function callbackFromTollInvoiceModal(invoiceNumbers, sender, customer, CustomerName, DeliveryAddress) {


        $("#CustomerID").val(customer);
        $(".cCustomerName").val(CustomerName);
        $(".cAddress").val(DeliveryAddress);

        $.ajax({

            url: "/VMS/Toll6_3Invoice/BlankItem",
            cache: false,
            type: "POST",
            data: JSON.stringify(invoiceNumbers),
            success: function (html) {
                //////console.log(html)
                callingFixedTable();

                $("#editorItemRows4").html("");
                $("#editorItemRows4").append(html);
            },

            error: function (error, ajaxOptions, thrownError) {
                console.log(error, ajaxOptions, thrownError);
                console.log('Error');
            }
            , complete: function () { $(".loading").fadeOut(200).hide("slow") }

            , contentType: 'application/json; charset=utf-8'
            , Accept: "text/html; charset=utf-8"
            //    , dataType: 'json'
        });

        //ProductNameChange(code);
       // $('.trProduct').select2('val', itemNo);
    }


    function modalInitHigher(url) {


        url = url;

        var modal = document.getElementById('myHigherModal');
        $.ajax({
            url: url,
            cache: false,
            beforeSend: function () { $(".loading").show(); },
            complete: function () { $(".loading").fadeOut(200).hide("slow") },
            success: function (html) {
                modal.style.display = "block";
                $("#myHigherModal").html(html);
               // console.log(html);
            }
        });
    }

    // IToll6_3Invoice _dal  _dal.Insert(masterVM, detailVMs, null, null, connVM);
</script>

<script>

    function SaveData() {

        var a = requiredFields('frmToll6_3Invoice');

        //var items = $(".dItemName").length;
        //if (items == 0) {
        //    ShowResult("Fail", "Please Add Product Details!");
        //    $(".accordionProduct").trigger("click");
        //    return;
        //}

        //if (a != 0) {
        //    return;
        //}

        pageSubmit('frmToll6_3Invoice');
    }


    function PostData(sender) {
        var Id = $("#Id").val();
        var Post = $("#Post").val();
        if (Post.toLowerCase() == 'true' || Post.toLowerCase() == 'y') {
            ShowResult("Fail", "Data Already Posted!");
            return;
        }
        @*var branchId = '@Session["BranchId"]';
        var searchBranchId = $('#BranchId').val();

        if (branchId != searchBranchId) {
            ShowResult("Fail", "This Information not for this Branch!");
            return;
        }*@
        var url = '/Vms/Toll6_3Invoice/Post?ids=' + Id + '~';
        var questionMSG = "Are you sure to Post Data!";
        singlePostDlete(questionMSG, url);
    }

    $('.vat11Report').click(function () {
        var post = $('#Post').val();

        if (post == "N" || post == "") {
            ShowResult("Fail", "Data Not Posted!");
            return;
        }
        var url = "/VMS/NBRReport/VAT6_3Toll?TollNo=" + '@Model.TollNo';
        console.log(url);

        var win = window.open(url, '_blank');


    });

</script>

