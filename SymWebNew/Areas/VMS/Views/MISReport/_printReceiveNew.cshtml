@model VATViewModel.DTOs.ProductionMISViewModel
@using UIHelper.MVC
@{
    Layout = null;
}

<style>
    .HigherModal {
        padding-top: 10%;
    }
    .HigherModal-content {
        width: 50%;
        padding-bottom: 10px;
    }
    .customDatePicker {
        background: #fefede url(/Images/calendar.jpg) no-repeat 98% !important;
    }
    div.btn-group .btn {
        padding-top: 0px !important;
        padding-bottom: 0px !important;
    }
    /* The Close Button */
    .closeHigher {
        color: white;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .closeHigher:hover,
    .closeHigher:focus {
        color: #ff0505;
        text-decoration: none;
        cursor: pointer;
    }
</style>

<div class="HigherModal-content">
    <div class="HigherModal-header">
        <span class="closeHigher">&times;</span>
        <h2 class="text-center">Report(Receive)</h2>
    </div>
    <div class="HigherModal-body">
        @using (Html.BeginForm("ReportIssue", "MISReport", FormMethod.Post, new { enctype = "multipart/form-data", @target = "_blank", @Id = "frmPopUpReceive" }))
        {
            <div class="form-group">
                <label>Receive No</label>
                @Html.SimpleDropDownFor(m => m.IssueNo, "//", new { @class = " form-control selectDropdown trIssueNo" })
            </div>
            <div class="form-group col-md-6" style="padding-left:0px;">
                <label>Receive Date From</label>
                @Html.TextBoxFor(m => m.IssueDateFrom, new { @placeholder = "Start Date", @class = "customDatePicker form-control" })
            </div>
            <div class="form-group col-md-6" style="padding-right:0px;">
                <label>Receive Date To</label>
                @Html.TextBoxFor(m => m.IssueDateTo, new { @placeholder = "End Date", @class = "customDatePicker form-control" })
            </div>
            <div class="form-group">
                <label>Product Name</label>
                @Html.SimpleDropDownFor(m => m.ProductName, "/Config/DropDown/ProductName", new { @class = " form-control selectDropdown trIssueNo" })
            </div>
            <div class="form-group col-md-6" style="padding-left: 0px;">
                <label>Product Group</label>
                @Html.SimpleDropDownFor(m => m.ProductGroup, "//", new { @class = " form-control selectDropdown trIssueNo" })
            </div>
            <div class="form-group col-md-6" style="padding-right:0px;">
                <label>Product Type</label>
                @Html.SimpleDropDownFor(m => m.ProductType, "//", new { @class = " form-control selectDropdown trIssueNo" })
            </div>
            <div class="form-group col-md-6 chkDesign" style="padding-left: 0px;">
                @Html.HiddenFor(m => m.Post, new { @class=" chkValue"})
                <label>Post </label>
                <input id="input-1" type="checkbox">
            </div>
            <div class="form-group col-md-6" style="padding-right:0px;">
                <label>Shift </label>
                <select id="shift" class="form-control">
                    <option value="A">A</option>
                </select>
            </div>
            <div class="form-group col-md-offset-2">
                @*<div class="clearfix"></div>*@
                <label class="RadioContainer">
                    Detail
                    <input type="radio" checked name="rptType">
                    <span class="checkmark"></span>
                </label>
                <label class="RadioContainer">
                    Summery
                    <input type="radio" name="rptType">
                    <span class="checkmark"></span>
                </label>
                <label class="RadioContainer">
                    Single
                    <input type="radio" name="rptType">
                    <span class="checkmark"></span>
                </label>
            </div>
            <div class="npForm col-md-2">
        @Html.SimpleDropDownFor(m => m.FontSize, "/Config/DropDown/Font", new { @class = " form-control DRselectDropdown" })
    </div>
            @Html.HiddenFor(m => m.PreviewOnly);
            <button type="button" class=" btn sym-btn-report"> Preview</button>
            <button type="button" class="sym-btn-close closeBtn pull-right"> Close</button>
        }
    </div>
</div>
<script src="~/assets/javascripts/custom.js"></script>
<script>
    $(document).ready(function () {
        ////boolean checkbox
        CheckBoxDesign();
        MyCheckBox('@Model.Post', 'input-1', 'Post');
        ////for select2 dropdown
        $(".selectDropdown").select2();
        $(".selectDropdown").trigger('change');
        $(".selectDropdown").removeClass('form-control');
        ///check validation
        function checkValidation() {
            var startDate = $('#IssueDateFrom').val();
            if (startDate == "") {
                ShowResult("Fail", "Select start date!");
                return false;
            }
            var endDate = $('#IssueDateTo').val();
            if (endDate == "") {
                ShowResult("Fail", "Select end date!");
                return false;
            }
            return true;
        }
        ////clicking preview button
        //$('.trPreview').click(function () {
        //    var isValid = checkValidation();
        //    if (isValid == false) {
        //        return;
        //    }
        //    $("#PreviewOnly").val("true");
        //    pageSubmit('frmPopUpReceive');
        //});
        function closeHigherModal() {
            $("#myHigherModal").html("");
            trkmodal.style.display = "none";
        }
        var span = document.getElementsByClassName("closeHigher")[0];
        var trkmodal = document.getElementById('myHigherModal');
        //When the user clicks on <span> (x), close the trkmodal
        span.onclick = function () {
            closeHigherModal();
        }
        $('#myHigherModal .closeHigherBtn').click(function () {
            closeHigherModal();
        });
        
    });
</script>
