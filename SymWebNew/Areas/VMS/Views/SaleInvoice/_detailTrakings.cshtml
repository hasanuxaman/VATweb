@*@model VATViewModel.DTOs.TrackingVM*@
@model IList<VATViewModel.DTOs.TrackingVM>
    @using UIHelper.MVC
    @{
        Layout = null;
    }

@foreach (var vm in Model)
{
    <tr class="tablerow_Trackings ">

        @using (Html.BeginCollectionItem("Trackings"))
        {

            <td>

                @Html.CheckBox("IsSelect", vm.IsSelect, new { @class = "dIsSelect   form-control", @readonly = "readonly" })


                @*<a id="" title="Click to Remove" onclick="RemoveItem(this);" class="sym-btn-remove-row "></a>
                <a id="" title="Click to Edit" onclick="EditItemTrakings(this);" class="sym-btn-edit-row"></a>*@

            </td>
            <td>
                @Html.TextBox("ItemNo", vm.ItemNo, new { @class = "dItemNoT   form-control", @readonly = "readonly" })
            </td>
            <td>
                @Html.TextBox("Heading1", vm.Heading1, new { @class = "dHeading1T   form-control", @readonly = "readonly" })
            </td>
            <td>
                @Html.TextBox("Heading2",vm.Heading2, new { @class = "dHeading2T   form-control", @readonly = "readonly" })
            </td>
            
         
             @Html.Hidden("SaleInvoiceNo",vm.SaleInvoiceNo, new { @class = "dSaleInvoiceNo" })
             @Html.Hidden("IsIssue", vm.IsIssue, new { @class = "dIsIssue" })
             @Html.Hidden("IssueNo", vm.IssueNo, new { @class = "dIssueNo" })
             @Html.Hidden("IsReceive", vm.IsReceive, new { @class = "dIsReceive" })
             @Html.Hidden("ReceiveNo", vm.ReceiveNo, new { @class = "dReceiveNo" })
             @Html.Hidden("IsSale", vm.IsSale, new { @class = "dIsSale" })
             @Html.Hidden("ReceiveDate", vm.ReceiveDate, new { @class = "dReceiveDate" })
             @Html.Hidden("FinishItemNo", vm.FinishItemNo, new { @class = "dFinishItemNo" })
       

        }

    </tr>
}