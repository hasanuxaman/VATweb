@model VATViewModel.DTOs.MPLIN89VM
@using UIHelper.MVC
@using SymOrdinary
@using System.Threading;
@using VATServer.Ordinary
@{
    ShampanIdentity identity = null;
    try
    {
        identity = (ShampanIdentity)Thread.CurrentPrincipal.Identity;
    }
    catch (Exception)
    {
        Response.Redirect("/VMS/Home/Login");
        return;
    }
}

@{
    ViewBag.Title = "Index";
}

@Html.HiddenFor(model => model.TransactionType)

<style>
    .aTag {
        background-color: darkgray !important;
    }

    .aActiveTag {
        background-color: deepskyblue !important;
    }
</style>

<div class="headrow">
    <label class="pull-right"> Transfer Receive </label>
</div>

<div class=" tabMenu">
    <ul style="font-size: 1.4em;" class="tabDesign nav nav-tabs">
        <li class="tabDefault active"><a id="aTagReceive" class="aTag" href="/VMS/MPLIN89/Index?TransactionType=Other">IN-89</a></li>
        <li class="tabDefault active"><a id="aTagIssue" class="aTag" href="/VMS/MPLIN89/TransferReceiveIndex">Transfer Receive</a></li>
    </ul>

</div>

<div class="tab-content">
    <div id="ReceiveIndex" class="tab-pane fade  in active">
        <div class="thinbox  animated zoomIn animated zoomIn faster">
            <div class="th_thinbox">
                @if (Model.TransactionType.ToLower() == "other")
                {
                    <p>Transfer Receive List </p>
                }
            </div>
            <div class="dtSearch formDesign">
                <div class="row">
                    <div class="trk1_5">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SearchField)
                        </div>
                        <div class="editor-field">
                            @Html.SimpleDropDownFor(m => m.SearchField, "/Config/DropDown/ProductSearch", new { @class = " form-control " })
                        </div>
                    </div>
                    <div class="trk1_5">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SearchValue)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.SearchValue, new { @class = "  form-control" })
                        </div>
                    </div>
                    <div class="trk1_5">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.FromDate)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.FromDate, new { @placeholder = "Date From", @class = "customDatePicker defaultDate form-control" })
                        </div>
                    </div>
                    <div class="trk1_5">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ToDate)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ToDate, new { @placeholder = "Date To", @class = "customDatePicker defaultDate form-control" })
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="editor-label">
                            <label>Select Top</label>
                        </div>
                        <div class="editor-field">
                            @Html.SimpleDropDownFor(model => model.SelectTop, "/Config/DropDown/RecordSelectList", new { @class = " cBranchId form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-7">
                        <div class="editor-label">
                            <label>&nbsp;</label>
                        </div>
                        <div class="editor-field">
                            <button type="button" title="Click to Search" id="btnDialog" class="sym-btn-search">&nbsp;Search</button>
                            <button type="button" title="Clear Data" id="Clear" class=" sym-btn-clear">&nbsp;Clear</button>
                            <button type="button" title="Receive Data" onclick="MultipleReceive()" class="sym-btn-save">&nbsp;Select</button>
                        </div>
                    </div>
                </div>


            </div>
            <p>&nbsp;</p>
            <table id="myDataTable" class="display">
                <thead>
                    <tr>
                        <th class="center"> <input type="checkbox" class="chkAll" /> &nbsp; Action </th>
                        <th>Transfer Receive No</th>
                        <th>Receive Date</th>
                        <th>Transfer From</th>
                        <th>Product Code</th>
                        <th>Item Name</th>
                        <th>Wagon No</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <br />
        </div>

        <form id="ReportForm" method="post" target="_blank"></form>
    </div>


</div>



<div id="myHigherModal" class="HigherModal"></div>


<script>

    $("#ReceiveIndex .chkAll").click(function () {
        $('.dSelected:input:checkbox').not(this).prop('checked', this.checked);
    });

    function MultipleReceive() {
        debugger;

        var questionMSG = "Are you sure to Receive Data!";

        Ask(questionMSG, function () {
            debugger;
            var IDs = [];
            var $Items = $("#ReceiveIndex  .dSelected:input:checkbox:checked");

            if ($Items == null || $Items.length == 0) {
                ShowResult("Fail", "You are requested to Select Data!");
                return;
            }

            var item = null;
            var isSame = true;

            $Items.each(function () {
                debugger;
                if (isSame) {
                    var data = $(this).attr("data-Id");
                    var ID = data.split("~");

                    if (item == null) {
                        item = ID[0];
                    }
                    if (ID[0] == item) {
                        IDs.push(data);
                    }
                    else {
                        isSame = false;
                        ShowResult("Fail", "You are Requested to Select Same Item!");
                        return;
                    }
                }
            });
            if (isSame) {
                var model = {
                    IDs: IDs,
                }
                debugger;
                var url = "/VMS/MPLIN89/Create?IDs=" + IDs.join("&IDs=");
                window.location.href = url;
            }

        });
    };


</script>


<script language="javascript" type="text/javascript">

    $(document).ready(function () {

        debugger;
        var pathname = window.location.pathname;
        if (pathname == "/Index" || pathname == "/VMS/MPLIN89/Index") {
            $('#aTagReceive').removeClass("aTag");
            $('#aTagReceive').addClass("aActiveTag");
        }
        else if (pathname == "/ReceiveIndex" || pathname == "/VMS/MPLIN89/TransferReceiveIndex") {
            $('#aTagIssue').removeClass("aTag");
            $('#aTagIssue').addClass("aActiveTag");
        }

        SelectAllForDelete();
        $.datepicker.regional[""].dateFormat = 'dd/M/y';
        $.datepicker.setDefaults($.datepicker.regional['']);
        var oTable = $('#myDataTable').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/VMS/MPLIN89/_receiveIndex?TransactionType=@Model.TransactionType",
            "bProcessing": true,
            "aLengthMenu": tablelength(),
            "bJqueryUI": true,
            "bAutoWidth": false,

            "fnServerData": function (sSource, aoData, fnCallback) {
                $('.dtSearch :input').each(function () {
                    var Name = $(this).attr("Id")
                    var Value = $(this).val()
                    aoData.push({ "name": Name, "value": Value });
                });


                $.getJSON(sSource, aoData, function (json) {
                    debugger;
                    console.log(json.aaData);
                    $.each(json.aaData, function (index, element) {
                        debugger;
                        console.log(index, element[3]);
                        var totalAmnt = element[7].replace(',', '');
                        json.aaData[index][7] = parseFloat(totalAmnt).toLocaleString('en-US', { minimumFractionDigits: 2 });
                    });
                    debugger;
                    fnCallback(json);
                });
            },

            "aoColumns": [
                            {
                                "sName": "Id",
                                "bSearchable": false,
                                "bSortable": false,
                                "sWidth": "12%",
                                "sClass": "center",
                                "fnRender": function (oObj) {
                                    debugger;

                                    return '<input onclick="CheckAll(this)" class="dSelected" type="checkbox" data-Id="' + oObj.aData[0] + '" data-post="' + oObj.aData[7] + '"> &nbsp;'
                                    ;
                                }
                            }
                            , { "sName": "TransferReceiveNo", "sWidth": "10%" }
                            , { "sName": "ReceiveDateTime", "sWidth": "10%" }
                            , { "sName": "TransferFrom", "sWidth": "8%" }
                            , { "sName": "ProductCode", "sWidth": "8%" }
                            , { "sName": "ProductName", "sWidth": "15%" }
                            , { "sName": "WagonNo", "sWidth": "8%" }
                            , { "sName": "Quantity", "sWidth": "8%" }

            ]
        });

        $('#btnDialog').click(function () {
            debugger
            var model = $('.dtSearch :input').serialize();

            $.ajax({
                url: "/VMS/MPLIN89/Index",
                cache: false,
                success: function (html) {
                    oTable.fnDraw();
                }
            });
        });

        ////clearing fields
        $("#Clear").on('click', function () {
            $(".Dropdown").select2("val", "");
            $(".form-control").val("");
        });


    });



</script>
